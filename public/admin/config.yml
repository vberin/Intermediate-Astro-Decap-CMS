# Use DecapBridge auth (required)
backend:
  name: git-gateway
  repo: vberin/Intermediate-Astro-Decap-CMS # Взят из вашего кода
  branch: main
  identity_url: https://auth.decapbridge.com/sites/6753173a-b6a1-4bb0-ae19-22755fa551f4 # Взят из вашего кода
  gateway_url: https://gateway.decapbridge.com

  # Quickly see who did what (optional)
  commit_messages:
    create: Create {{collection}} “{{slug}}” - {{author-name}} <{{author-login}}> via DecapBridge
    update: Update {{collection}} “{{slug}}” - {{author-name}} <{{author-login}}> via DecapBridge
    delete: Delete {{collection}} “{{slug}}” - {{author-name}} <{{author-login}}> via DecapBridge
    uploadMedia: Upload “{{path}}” - {{author-name}} <{{author-login}}> via DecapBridge
    deleteMedia: Delete “{{path}}” - {{author-name}} <{{author-login}}> via DecapBridge
    openAuthoring: Message {{message}} - {{author-name}} <{{author-login}}> via DecapBridge

# Better Decap + Bridge logo (optional)
logo_url: https://decapbridge.com/decapcms-with-bridge.svg

# Add site links in DecapCMS (optional)
site_url: https://astrotiktak.netlify.app

media_folder: src/assets/images/blog # Location where files will be stored in the repo - we store them in src so that Astro can optimize them.
public_folder: src/assets/images/blog # Ensure that this path is the same as the media_folder path above.

collections:
  - name: "content_plan"
    label: "Планировщик Контента"
    files:
      - label: "План публикаций"
        name: "plan"
        file: "src/data/content-plan.json"
        description: "Добавьте сюда темы для будущих статей. Система будет автоматически генерировать и публиковать их в указанную дату."
        widget: "list"
        fields:
          - { label: "Промпт (тема) для статьи", name: "prompt", widget: "string" }
          - { label: "Желаемая дата публикации", name: "publishDate", widget: "datetime" }
          - { label: "Статус", name: "status", widget: "hidden", default: "scheduled" }

  - name: "authors"
    label: "Авторы"
    files:
     - label: "Список авторов"
       name: "authors_list"
       file: "src/data/authors.json"
       widget: "list"
       fields:
         - { label: "Имя", name: "name", widget: "string" }
         - { label: "Должность", name: "position", widget: "string" }

  - name: "blog"
    label: "Blog"
    folder: "src/content/blog"
    create: true
    fields:
      - { label: "Title", name: "title", widget: "string" }
      - { label: "Description", name: "description", widget: "string" }
      
      - label: "Автор"
        name: "author"
        widget: "relation"
        collection: "authors"
        search_fields: ["authors_list.*.name"]
        value_field: "authors_list.*.name"
        display_fields: ["authors_list.*.name"]
        
      - { label: "Date", name: "date", widget: "datetime" }
      - { label: "Cover Image", name: "image", widget: "image" }
      - { label: "Image Caption", name: "imageAlt", widget: "string" }
      - { label: "Is it a featured post?", name: "isFeatured", widget: "boolean", default: false }
      - label: "Тип контента"
        name: "contentType"
        widget: "select"
        options:
          - { label: "Кластерная статья (Обычная)", value: "cluster" }
          - { label: "Страница-Столп (Основная)", value: "pillar" }
        default: "cluster"
      - label: "Родительская страница-столп"
        name: "parentPillar"
        widget: "relation"
        collection: "blog"
        search_fields: ["title"]
        value_field: "{{slug}}"
        display_fields: ["title"]
        required: false
        condition:
          field: "contentType"
          value: "cluster"
      - { label: "Body", name: "body", widget: "markdown" }

